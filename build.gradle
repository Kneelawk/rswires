plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.gradle.plugin.idea-ext'
    id 'fabric-loom'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions.jvmTarget = '17'
    kotlinOptions.freeCompilerArgs += '-Xjvm-default=all'
}

archivesBaseName = project.archives_base_name
group = project.maven_group

apply from: 'https://dblsaiko.net/pub/gradle/autoversion.gradle'

repositories {
    maven { url 'https://maven.dblsaiko.net' }
    // maven { url 'https://maven.terraformersmc.com/releases/' }
    mavenLocal()
}

dependencies {
    def optionalProject = { Map<String, Object> depSpec, String projectName, Closure c = {} ->
        def project = findProject(projectName)
        if (project) {
            implementation(project, c)
        } else {
            modImplementation(depSpec, c)
        }
    }

    minecraft group: "com.mojang", name: "minecraft", version: minecraft_version
    mappings group: "net.fabricmc", name: "yarn", version: yarn_mappings, classifier: "v2"
    modImplementation group: "net.fabricmc", name: "fabric-loader", version: loader_version

    modImplementation group: "net.fabricmc.fabric-api", name: "fabric-api", version: fabric_version
    implementation(group: "net.fabricmc", name: "fabric-language-kotlin", version: fabric_kotlin_version) {
        exclude module: 'fabric-loader'
    }

    // modImplementation group: 'net.dblsaiko', name: 'hctm-base', version: hctm_base_version
    optionalProject ':hctm-base', group: 'net.dblsaiko', name: 'hctm-base', version: hctm_base_version
    include group: 'net.dblsaiko', name: 'hctm-base', version: hctm_base_version

//    modRuntimeOnly(group: 'net.dblsaiko.qcommon.cfg', name: 'cfg', version: cfg_version) {
//        exclude group: 'net.fabricmc.fabric-api'
//        exclude module: 'cfg-keys'
//    }
//
//    modImplementation(group: 'net.dblsaiko.qcommon.cfg', name: 'cfg-core', version: cfg_core_version) {
//        exclude group: 'net.fabricmc.fabric-api'
//    }
//
//    modImplementation group: 'net.dblsaiko', name: 'libaddict', version: libaddict_version
//
//    modImplementation group: "net.dblsaiko.qcommon.croco", name: "croco", version: croco_version
//
//    modRuntimeOnly group: 'net.dblsaiko', name: 'winwonders', version: '0.1.2-4'
    // modRuntimeOnly(group: 'com.terraformersmc', name: 'modmenu', version: '2.0.0-beta.7') {
    //     exclude module: 'fabric-api'
    // }
}

processResources {
    inputs.property 'version', project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    withSourcesJar()
}

jar {
    from 'LICENSE'
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

idea.project?.settings {
    delegateActions {
        delegateBuildRunToGradle = false
        testRunner = org.jetbrains.gradle.ext.ActionDelegationConfig.TestRunner.PLATFORM
    }
}

apply from: 'https://dblsaiko.net/pub/gradle/publish-slim.gradle'